<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.option16</groupId>
  <artifactId>main</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>main</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
  </properties>

  <dependencies>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-jcl</artifactId>
      <version>1.7.36</version>
    </dependency>


    <dependency>
      <groupId>com.github.kurbatov</groupId>
      <artifactId>firmata4j</artifactId>
      <version>2.3.8</version>
    </dependency>


    <dependency>
      <groupId>io.github.java-native</groupId>
      <artifactId>jssc</artifactId>
      <version>2.9.4</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <!--<pluginManagement> lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) 
    Fun fact: https://github.com/microsoft/vscode-maven/issues/480
    Don't use pluginManagement -->
      <plugins>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>

        <!-- Maven Shade Plugin
        Do not invoke Shade directly, use package instead 
        https://stackoverflow.com/questions/14494743/m2e-shade-eclipse-project-main-artifact-does-not-exist-->
        <plugin>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-shade-plugin</artifactId>
         <version>3.4.1</version>
         <executions>
           <!-- Run shade goal on package phase -->
           <execution>
         <phase>package</phase>
         <goals>
           <goal>shade</goal>
         </goals>
         <configuration>
           <transformers>
           <!-- add Main-Class to manifest file -->
                                   <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
             <mainClass>com.option16.App</mainClass>
           </transformer>
           </transformers>
         </configuration>
          </execution>
         </executions>
        </plugin>

        <!-- Build an executable JAR -->

        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
          <configuration>
            <archive>
              <!-- Generates the Manifest file (part of JAR standard)
              Relevant Java Stuff:
              https://stackoverflow.com/questions/9689793/cant-execute-jar-file-no-main-manifest-attribute
              https://stackoverflow.com/questions/10568275/noclassdeffounderror-on-maven-dependency -->
              <manifest>
                <addClasspath>true</addClasspath>
                <classpathPrefix>target/classes</classpathPrefix>
                <mainClass>com.option16.App</mainClass>
              </manifest>
            </archive>
          </configuration>
        </plugin>

        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>

      </plugins>
    <!--</pluginManagement> -->
  </build>
</project>
